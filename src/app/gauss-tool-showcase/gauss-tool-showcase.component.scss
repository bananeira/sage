@import "src/app/variables";

hr {
    color: $b-color;
}

br {
    display: block; /* makes it have a width */
    content: ""; /* clears default height */
    margin-top: 0.5em; /* change this to whatever height you want it */
}

span {
    margin: 2px;
    display: inline-block;
}

.definition-box ol {
    margin: 12px 0 0 0;
}

.sub-heading {
    color: $text-emphasis-normal;
}

.content {
    margin-top: - $b-radius-block;
    border: $b-width solid $b-color;
    border-top: none;
    border-bottom-left-radius: $b-radius-block;
    border-bottom-right-radius: $b-radius-block;
    background-color: $background-block;
    display: none;
    user-select: text;
    box-shadow: 0 12px 24px -12px rgba($text-emphasis-low, 0.22);

    &.active {
        display: block;
    }

    & .container {
        display: block;
        box-sizing: border-box;
        padding: calc($padding-high / 2.5) $padding-high;
    }
}

.tabs {
    display: flex;
    flex-wrap: wrap; // make sure it wraps
    margin-bottom: $margin-links-y;
}

label {
    font-family: "Mulish", sans-serif;
    color: $text-emphasis-high;
    user-select: none;
}

.tabs label {
    order: 1;
    opacity: 0.5;
    display: block;
    padding: $padding-normal;
    margin-right: 3px;
    cursor: pointer;
    background: $background-base;
    border: $b-width solid $b-color;
    border-bottom: none;
    border-top-left-radius: $b-radius-small;
    border-top-right-radius: $b-radius-small;
    transition: 0.4s;

    &:hover {
        opacity: 0.8;
    }
}

.tabs .tab {
    order: 99; // Put the tabs last
    flex-grow: 1;
    width: 100%;
    display: none;
    padding: 12px 24px;
}

.tabs input[type="radio"] {
    display: none;
}

.tabs input[type="radio"]:checked + label {
    opacity: 1;
    background: $background-block;
}

.tabs input[type="radio"]:checked + label + .tab {
    display: block;
    background: $background-block;
    border: $b-width solid $b-color;
    border-top-right-radius: $b-radius-small;
    border-bottom-left-radius: $b-radius-small;
    border-bottom-right-radius: $b-radius-small;
}

.mathjax-content {
    color: rgba($text-emphasis-high, 0.9);
}

.input {
    width: 30px;
    user-select: auto;

    &.dimensions {
        width: 50px;
    }
}

.error {
    color: $terminal-error;
    display: none;

    &.true {
        display: block;
    }
}

::ng-deep .definition-box {
    border: $b-width solid $b-color;
    border-radius: $b-radius-block;
    padding: $padding-normal;
    margin: calc($margin-links-y/2) 0;
}

.device-too-small {
    display: none;
}

@media only screen and (max-width: 800px) {
    .mathjax-content {
        display: none;
    }

    .device-too-small {
        display: block;
    }
}

.toggle-option-inline {
    display: flex;

    & span {
        display: block;
    }
}
